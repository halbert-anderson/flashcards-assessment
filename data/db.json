{
  "decks": [
    {
      "id": "1",
      "name": "Rendering in React",
      "description": "React's component structure allows for quickly building a complex web application that relies on DOM manipulation. "
    },
    {
      "name": "React Router",
      "description": "React Router is a collection of navigational components that compose declaratively with your application.",
      "id": "2"
    },
    {
      "id": "d131",
      "name": "dasa",
      "description": "dsa"
    },
    {
      "id": "59fe",
      "name": "dffadsffa",
      "description": "dfadfasdfsdf"
    },
    {
      "id": "d85f",
      "name": "sdfadf",
      "description": "afsafa"
    },
    {
      "id": "e0e9",
      "name": "Evan Deck",
      "description": "My first deck"
    },
    {
      "id": "eb2b",
      "name": "Evan second",
      "description": "Second deckl"
    },
    {
      "id": "5146",
      "name": "Evan 4th",
      "description": "4th"
    },
    {
      "id": "1635",
      "name": "Evan 7",
      "description": "Seventh"
    },
    {
      "id": "9b89",
      "name": "7",
      "description": "7"
    },
    {
      "id": "5d1f",
      "name": "hal 1",
      "description": "hal i info"
    },
    {
      "id": "f2ea",
      "name": "Hal 2001",
      "description": "one more deck"
    },
    {
      "id": "9a52",
      "name": "Hal 2001",
      "description": "new deck"
    },
    {
      "id": "52a8",
      "name": "new deck 100",
      "description": "one hundred"
    }
  ],
  "cards": [
    {
      "id": "1",
      "front": "Differentiate between Real DOM and Virtual DOM.",
      "back": "Virtual DOM updates are faster but do not directly update the HTML",
      "deckId": "1"
    },
    {
      "id": "2",
      "front": "How do you modify the state of a different React component?",
      "back": "Not at all! State is visible to the component only.",
      "deckId": "1"
    },
    {
      "id": "3",
      "front": "How do you pass data 'down' to a React child component?",
      "back": "As properties or props",
      "deckId": "1"
    },
    {
      "front": "What path will match the follow Route?\n<Route>\n  <NotFound />\n</Route>",
      "back": "All paths. A route with no path matches all URL's",
      "deckId": "2",
      "id": "4"
    },
    {
      "front": "What does <Switch> do?",
      "back": "Renders the first matching child <Route> ",
      "deckId": "2",
      "id": "5"
    },
    {
      "front": "b",
      "back": "b",
      "deckId": "1",
      "id": "7"
    },
    {
      "id": "6ac5",
      "front": "dsdsd",
      "back": "dfdsds",
      "deckId": "d131"
    },
    {
      "id": "a377",
      "front": "ffsdfsdfds",
      "back": "fsdfdsfsdfds",
      "deckId": "d131"
    },
    {
      "id": "b9a4",
      "front": "afadfadsf",
      "back": "afadsfaf",
      "deckId": "d131"
    },
    {
      "id": "91f3",
      "front": "fasdfd",
      "back": "dafsaf",
      "deckId": "d131"
    },
    {
      "id": "cc75",
      "front": "dfadsfsa",
      "back": "asdfdsfa",
      "deckId": "d131"
    },
    {
      "id": "8227",
      "front": "dsaffa",
      "back": "dfasa",
      "deckId": "59fe"
    },
    {
      "id": "6d18",
      "front": "dADd",
      "back": "sdFfa",
      "deckId": "59fe"
    },
    {
      "id": "da6e",
      "front": "dsdssf",
      "back": "sdfsfdf",
      "deckId": "59fe"
    },
    {
      "id": "8a7c",
      "front": "eeee",
      "back": "ffff",
      "deckId": "d131"
    },
    {
      "id": "708c",
      "front": "werrwe",
      "back": "dsafasdfsa",
      "deckId": "d85f"
    },
    {
      "id": "b966",
      "front": "dafdsfa",
      "back": "dasfasd",
      "deckId": "d85f"
    },
    {
      "id": "4e14",
      "front": "sdfadfaf",
      "back": "bfsann",
      "deckId": "d85f"
    },
    {
      "id": "efde",
      "front": "fsaaffafs",
      "back": "erwqrwrqw",
      "deckId": "d85f"
    },
    {
      "id": "9b12",
      "front": "sadfsafsafa",
      "back": "adafsdfasd",
      "deckId": "d85f"
    },
    {
      "id": "8732",
      "front": "sdaffda",
      "back": "dsfsfada",
      "deckId": "59fe"
    },
    {
      "id": "3141",
      "front": "dafsfa",
      "back": "dfas",
      "deckId": "59fe"
    },
    {
      "id": "da0b",
      "front": "99",
      "back": "99",
      "deckId": "e0e9"
    },
    {
      "id": "c061",
      "front": "88",
      "back": "88",
      "deckId": "e0e9"
    },
    {
      "id": "2be0",
      "front": "77",
      "back": "77",
      "deckId": "e0e9"
    },
    {
      "id": "6458",
      "front": "card 7.2?",
      "back": "7.2!",
      "deckId": "1635"
    },
    {
      "id": "f4ed",
      "front": "card 7.3?",
      "back": "card 7.3!",
      "deckId": "1635"
    },
    {
      "id": "1643",
      "front": "card 7.4?",
      "back": "card 7.4!",
      "deckId": "1635"
    },
    {
      "id": "0f37",
      "front": "card 1",
      "back": "back card 1",
      "deckId": "9a52"
    },
    {
      "id": "c75e",
      "front": "card2",
      "back": "back card 2",
      "deckId":"9a52"
    },
    {
      "id": "be78",
      "front": "card 3",
      "back": "backd3",
      "deckId": "9a52"
    },
    {
      "id": "5fc4",
      "front": "101",
      "back": "back 101",
      "deckId": "52a8"
    },
    {
      "id": "9891",
      "front": "102",
      "back": "back 102",
      "deckId": "52a8"
    },
    {
      "id": "5883",
      "front": "103",
      "back": "back 103",
      "deckId": "52a8"
    },
    {
      "id": "8fe4",
      "front": "1f",
      "back": "1b",
      "deckId": "d85f"
    },
    {
      "id": "4b5b",
      "front": "2f",
      "back": "2b",
      "deckId": "d85f"
    },
    {
      "id": "612c",
      "front": "3f",
      "back": "3b",
      "deckId": "d85f"
    },
    {
      "id": "1388",
      "front": "4f",
      "back": "4b",
      "deckId": "d85f"
    }
  ]
}